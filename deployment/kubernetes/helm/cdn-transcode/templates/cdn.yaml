
{{- if eq "cdn" $.Values.scenario }}

apiVersion: v1
kind: Service
metadata:
  labels:
    app: cdn-service
  name: cdn-service
spec:
  ports:
  - name: "443"
    port: 443
    targetPort: 8443
  - name: "1935"
    port: 1935
    targetPort: 1935
  externalIPs:
    - "{{ .Values.cdn.hostIP }}"
  selector:
    app: cdn-service

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cdn-service
  name: cdn-service
spec:
  selector:
    matchLabels:
      app: cdn-service
  replicas: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: cdn-service
    spec:
      containers:
      - args:
        - bash
        - -c
        - /home/main.py&/usr/local/sbin/nginx
        image: {{ $.Values.registryPrefix }}tc_{{ $.Values.scenario }}_service:latest
        imagePullPolicy: IfNotPresent
        name: cdn-service
        ports:
        - containerPort: 8443
        - containerPort: 1935
        volumeMounts:
          - mountPath: /var/run/secrets
            name: secrets
            readOnly: true
          - mountPath: /var/www/archive
            name: archive
          - mountPath: /var/www/video
            name: cache
      volumes:
        - name: secrets
          secret:
            secretName: self-signed-certificate
        - name: archive
          persistentVolumeClaim:
            claimName: video-archive
        - name: cache
          persistentVolumeClaim:
            claimName: video-cache
      restartPolicy: Always

{{- end }}
